{"pc":{"type":"Grid","model":{"stacked":"md","rows":[{"cells":[{"component":{"type":"Text","model":{"_internalName":"Text1","text":"<h1 style=\"text-align:center;\">TCE Internal Use Subcontractor Form</h1>"}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"Grid","model":{"_internalName":"Grid1","stacked":"md","rows":[{"cells":[{"component":{"type":"SingleLineText","model":{"_internalName":"t.GI.generalContractorName","width":210,"title":{"text":"General Contractor Name","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"cFont":{"style":"Normal","weight":"Normal"},"type":"Anything"}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"SingleLineText","model":{"_internalName":"t.GI.telephoneNumberOfPrime","title":{"text":"Telephone Number of Prime Contractor","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"cHint":"123-456-7890","cFont":{"style":"Normal","weight":"Normal"},"type":"Phone","pattern":"^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]\\d{3}[\\s.-]\\d{4}$","error":"This field must contain a valid phone number."}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"SingleLineText","model":{"_internalName":"t.GI.streetAddrOfGeneralContractor","title":{"text":"Street Address of General Contractor","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"cFont":{"style":"Normal","weight":"Normal"},"type":"Anything"}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"SingleLineText","model":{"_internalName":"t.GI.cityOfGeneralContractor","title":{"text":"City of General Contractor","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"cFont":{"style":"Normal","weight":"Normal"},"type":"Anything"}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"DropDown","model":{"_internalName":"dd.GI.stateOfGeneralContractor","title":{"text":"State of General Contractor","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"cFont":{"style":"Normal","weight":"Normal"},"dataSource":"StaticList","StaticList":{"options":"AL\r\nAK\r\nAZ\r\nAR\r\nCA\r\nCO\r\nCT\r\nDE\r\nFL\r\nGA\r\nHI\r\nID\r\nIL\r\nIN\r\nIA\r\nKS\r\nKY\r\nLA\r\nME\r\nMD\r\nMA\r\nMI\r\nMN\r\nMS\r\nMO\r\nMT\r\nNE\r\nNV\r\nNH\r\nNJ\r\nNM\r\nNY\r\nNC\r\nND\r\nOH\r\nOK\r\nOR\r\nPA\r\nRI\r\nSC\r\nSD\r\nTN\r\nTX\r\nUT\r\nVT\r\nVA\r\nWA\r\nWV\r\nWI\r\nWY","allowUserValue":false},"selection":"Single","options":"AL\r\nAK\r\nAZ\r\nAR\r\nCA\r\nCO\r\nCT\r\nDE\r\nFL\r\nGA\r\nHI\r\nID\r\nIL\r\nIN\r\nIA\r\nKS\r\nKY\r\nLA\r\nME\r\nMD\r\nMA\r\nMI\r\nMN\r\nMS\r\nMO\r\nMT\r\nNE\r\nNV\r\nNH\r\nNJ\r\nNM\r\nNY\r\nNC\r\nND\r\nOH\r\nOK\r\nOR\r\nPA\r\nRI\r\nSC\r\nSD\r\nTN\r\nTX\r\nUT\r\nVT\r\nVA\r\nWA\r\nWV\r\nWI\r\nWY","allowUserValue":false}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"SingleLineText","model":{"_internalName":"t.GI.zipCodeOfGeneralContractor","title":{"text":"Zip Code of General Contractor","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"cFont":{"style":"Normal","weight":"Normal"},"type":"Custom","pattern":"^\\d{5}(?:[-\\s]\\d{4})?$","error":"Please enter a valid zip code"}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"MaskedInput","model":{"_internalName":"mt.GI.contractNo","width":210,"title":{"text":"MTA Contract #","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"description":"Letter followed by 5 numbers","cFont":{"style":"Normal","weight":"Normal"},"mask":"L-00000"}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"MaskedInput","model":{"_internalName":"mt.GI.primeEIN","width":210,"title":{"text":"Prime Contractor EIN","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"description":"Format: XX-XXXXXXX","cFont":{"style":"Normal","weight":"Normal"},"mask":"00-0000000"}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"DataTable","model":{"_internalName":"WhoWouldYouLikeToSendThisEmailTo","title":{"text":"Who would you like to send this email to?","visible":true},"required":true,"font":{"style":"Normal","weight":"Semibold"},"newLine":"Top","delete":"Last","columns":[{"_internalName":"Email","title":"Email","required":true,"type":"String"}]}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]}]}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"class":"autoInfo","component":{"type":"Grid","model":{"_internalName":"Grid2","stacked":"md","rows":[{"cells":[{"component":{"type":"SingleChoice","model":{"_internalName":"sc.GI.federallyFunded","title":{"text":"Federally Funded","visible":true},"orientation":"Horizontal","required":true,"font":{"style":"Normal","weight":"Semibold"},"wrap":true,"cFont":{"style":"Normal","weight":"Normal"},"dataSource":"StaticList","StaticList":{"options":"Yes\nNo","allowUserValue":false},"cColumns":3,"options":"Yes\nNo","allowUserValue":false}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]}]}},"alignment":{"horizontal":"Justify","vertical":"Top"},"columns":{"width":12}}]},{"cells":[{"component":{"type":"Submit","model":{"_internalName":"Submit1","text":"Submit","type":"Primary","click":"return fd.save();"}},"alignment":{"horizontal":"Left","vertical":"Top"},"columns":{"width":12}}]}]}},"tablet":null,"phone":null,"js":"/*******************************************************************************************************\r\n* The code from this section is executed once the form is loaded.                                      *\r\n*                                                                                                      *\r\n* Depending on the stage of the form lifecycle when a particular action should be performed,           *\r\n* you can use on the following hooks:                                                                  *\r\n*                                                                                                      *\r\n* fd.rendered()     the code is executed once the form is rendered                                     *\r\n*                                                                                                      *\r\n* fd.beforeSave()   the code is executed right before saving the form. If returns Promise, the saving  *\r\n*                   does not proceed until the Promise is resoved. If the Promise is rejected,         * \r\n*                   the saving interrupts. This is the appropriate place for adding custom validation. *\r\n*                                                                                                      *\r\n* fd.saved()        the code is executed once the form is submitted                                    *\r\n*                                                                                                      *\r\n* The following predefined variables can be utilized in the code:                                      *\r\n*                                                                                                      *\r\n* fd    an instance of the current form                                                                *\r\n* $     jQuery object                                                                                  *\r\n*                                                                                                      *\r\n*******************************************************************************************************/\r\n\r\n/*\r\n//The following code was used in editing and debugging. However, it was determined that simplifying and condensing\r\n//everything into the internal editor would cause less of a chance for things to break\r\n\r\n\r\n//The following code allows javascript to be run from an external api for ease of editing\r\nfd.beforeRender(function(vue){\r\n    var script = document.createElement('script'); \r\n    script.src = '//code.jquery.com/jquery-1.11.0.min.js'; \r\n    document.getElementsByTagName('head')[0].appendChild(script);\r\n    \r\n    jQuery(document).ready(function($){\r\n        var imported = document.createElement('script');\r\n        imported.src = 'https://kyleh2420.github.io/Plumsail_Initialization_Json_Code.js';\r\n        document.head.appendChild(imported);\r\n    });\r\n})\r\n\r\n\r\nasync function externalFile() {\r\n    const queryString = window.location.search;\r\n    urlOfJSON = \"https://kyleh2420.github.io/Submissions/initialization.json\";\r\n    const data = $.get(urlOfJSON);\r\n    return data;\r\n}\r\n\r\n\r\n*/\r\n\r\npreconfigured = {\r\n\t\"sc.GI.federallyFunded\": \"Yes\"\r\n};\r\n\r\nfd.rendered(function () {\r\n    autoPopulateGenInfo();\r\n    $('.autoInfo').hide();\r\n});\r\n\r\n\r\n\r\n/*\r\n+--------------------------------------------------------------------------------------------------------------------+\r\n|                                                                                                                    |\r\n|This function, autoPopulateGenInfo(), is used to auto-populate general information fields with preconfigured values.|\r\n|                                                                                                                    |\r\n|                         The preconfigured values are stored in the 'preconfigured' object.                         |\r\n|                                                                                                                    |\r\n|            It sets the values of specific form fields and disables them to prevent further user input.             |\r\n|                                                                                                                    |\r\n|                              @returns {void} This function does not return any value.                              |\r\n|                                                                                                                    |\r\n+--------------------------------------------------------------------------------------------------------------------+\r\n*/\r\nfunction autoPopulateGenInfo() {\r\n    // Loop through each key-value pair in the 'preconfigured' object.\r\n    Object.entries(preconfigured).forEach(el => {\r\n        const [elKey, elValue] = el;\r\n        try{\r\n            // Set the value of the field with 'elKey' to the corresponding 'elValue' from the 'preconfigured' object.\r\n            fd.field(elKey).value = elValue;\r\n            // Disable the field to prevent further user input.\r\n            fd.field(elKey).disabled = true;\r\n        }\r\n        catch(err) {\r\n            // If there is an error, log the failed autofill attempt.\r\n            console.log(\"Failed Autofill Key: \" + elKey + \". Value: \"+ elValue);\r\n        }\r\n    });\r\n\r\n    /*\r\n        Note: The previous code for extracting data from an external JSON file has been commented out,\r\n        as it is no longer deemed necessary. If this functionality is needed in the future,\r\n        consider re-implementing it based on the specific requirements of the JSON data and how it should be processed.\r\n    */\r\n    /*\r\n    externalFile().then(function(data){\r\n        //Finally, we will fill each key in\r\n        Object.entries(data).forEach(el => {\r\n            const [elKey, elValue] = el;\r\n            try{\r\n                fd.field(elKey).value = elValue;\r\n                fd.field(elKey).disabled = true;\r\n            }\r\n            catch(err) {\r\n                console.log(\"Failed Autofill Key: \" + elKey + \". Value: \"+ elValue);\r\n            }\r\n         \r\n        });\r\n    });\r\n    */\r\n}","css":null,"notifySubscribers":true,"version":"1.0.2","theme":null,"timezone":"America/New_York","culture":"en-US","thankYouMessage":null,"redirectURL":null,"hideAfterSubmission":false,"submissionTimeout":0,"authentication":0,"singleSubmissionPerUser":false,"allowEditingSubmission":false,"restrictAccess":false,"azureADTenant":null,"azureADObjects":[],"azureB2CProperties":null}